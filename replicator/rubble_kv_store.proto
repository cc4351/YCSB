syntax = "proto3";

option java_multiple_files = true;
option java_package = "rubblejava";
option java_outer_classname = "Rubble";
option objc_class_prefix = "Rub";

package rubble;

service RubbleKvStoreService {

  // an internal rpc call used by the upstream (except the tail node) 
  // to synchronize states to the downstream nodes in the chain
  rpc Sync (SyncRequest) returns (SyncReply) {} 

  // perform a db operation (CRUD)
  rpc DoOp(stream Op) returns (stream OpReply){}
}

message Op {
  repeated SingleOp ops = 1;
}

// operation to perform on a db
message SingleOp{
  
  string key = 1;
  string value = 2;
  uint64 Id = 3;

  enum OpType {
    GET = 0;
    PUT = 1;
    DELETE = 2;
    UPDATE = 3;
  }

  OpType type = 4;
}

message OpReply {
  repeated SingleOpReply replies = 1;
}

message SingleOpReply{
  bool ok = 1;
  string key = 2;
  string value = 3;
  string status = 4;

  int64  Id = 5;
  enum  OpType {
    GET = 0;
    PUT = 1;
    DELETE = 2;
    UPDATE = 3;
  }

  OpType type = 6;
}


message SyncRequest {
  // a json string of args
  string  args = 1;
}

message SyncReply {
  string message = 1;
}
